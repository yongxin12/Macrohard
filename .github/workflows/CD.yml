name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    # - name: Log in to Azure
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Log in to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        
    - name: Build and push image
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.ACR_SERVER }}/frontend:latest,${{ secrets.ACR_SERVER }}/frontend:latest
        cache-from: type=registry,ref=${{ secrets.ACR_SERVER }}/frontend:latest
        cache-to: type=inline
        
    - name: Build and push backend image
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.ACR_SERVER }}/backend:latest,${{ secrets.ACR_SERVER }}/backend:latest
        cache-from: type=registry,ref=${{ secrets.ACR_SERVER }}/backend:latest
        cache-to: type=inline
        
    - name: Deploy to VM
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        key: ${{ secrets.VM_SSH_KEY }}
        script: |
          export ACR_SERVER=${{ secrets.ACR_SERVER }}
          export ACR_USERNAME=${{ secrets.ACR_USERNAME }}
          export ACR_PASSWORD=${{ secrets.ACR_PASSWORD }}
          export DATABASE_URL=${{ secrets.DATABASE_URL }}
          cd ~/app
          bash deploy-app.sh 